demo_table demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/15-1-Student_Resources")
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/15-1-Student_Resources")
> demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
library(tidyverse)
> ?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
getwd()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/01_Demo")
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
?gather()
demo_table1 <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
?ggplot()
?ggplot()
?ggplot()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
install.packages("magrittr")
install.packages("magrittr")
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep')
> summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep')
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep')
library(tidyverse)
>?mutate()
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/01_Demo")
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
load("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/01_Demo/.RData")
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/01_Demo")
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
library(tidyverse)
library(dplyr)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/01_Demo")
library(tidyverse)
library(dplyr)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo_table)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
fromJSON()
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
?fromJson()
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
library(jsonlite)
ibrary(jsonlite)
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
View(demo_table2)
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
View(demo_table)
View(demo_table)
demo_table[3,"Year"]
demo_table[3,3]
demo_table$"Vehicle_Class"
demo_table$"Vehicle_Class"[2]
View(demo_table2)
View(demo_table2)
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
?subset()
#filter by price and drivetrain
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
View(filter_table2)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
View(filter_table3)
View(filter_table3)
View(filter_table2)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]#>>AND Operator OR operator
?sample()
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
View(demo_table2)
sample_rows <- sample(num_rows, 3)
View(demo_table)
View(demo_table2)
View(demo_table2)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 3),]
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE)
View(demo_table2)
View(demo_table2)
View(demo_table2)
View(filter_table3)
View(demo_table)
#create summary table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
View(summarize_demo)
View(summarize_demo)
#create summary table with multiple columns
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep')
View(summarize_demo)
?gather()
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(filter_table3)
View(filter_table3)
View(demo_table3)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
long_table <- demo_table3 %>% gather(key="Metric",value="Score",buying_price:popularity)
?spread()
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
all.equal(demo_table3,wide_table)
> table <-demo_table3[,order(colnames(wide_table))]
table <-demo_table3[,order(colnames(wide_table))]
View(table)
table <- demo_table3[,(colnames(wide_table))]
?ggplot()
head(mpg)
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2> plt + geom_bar() #plot a bar plot
plt <- ggplot(mpg,aes(x=class))
> plt + geom_bar() #plot a bar plot
plt <- ggplot(mpg,aes(x=class)) #import dataset into ggplot2
plt + geom_bar() #plot a bar plot
View(wide_table)
?geom_bar()
#create summary table
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
View(mpg_summary)
View(mpg_summary)
#import dataset into ggplot2
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
View(plt)
plt + geom_col() #plot a bar plot
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)
View(table)
View(wide_table)
View(wide_table)
View(mpg_summary)
View(plt)
View(mpg_summary)
plt + geom_line()
#add line plot with labels
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30))
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30))
plt <- ggplot(mpg,aes(x=displ,y=cty))
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)")
#import dataset into ggplot2
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class")
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive")
plt <- ggplot(mpg,aes(y=hwy)
plt + geom_boxplot()
plt <- ggplot(mpg,aes(y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
pg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
> theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)")
theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)")
theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot()
theme(axis.text.x=element_text(angle=45,hjust=1))
geom_point()
pg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size")
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine))
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy))
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
geom_density()
ggplot()
?ggplot
ggplot(mtcars,aes(x=wt)) + geom_density()
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
geom_density()
geom_point()
library(jsonlite)
geom_density()
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/01_Demo")
library(jsonlite)
geom_density()
ggplot(mtcars,aes(x=wt)) + geom_density()
ggplot(mtcars,aes(x=wt)) + geom_density()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep')
View(mpg_long)
View(mpg_long)
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep')
library(dplyr)
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep')
library(tidyverse)
?ggplot()
head(mpg)
?geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
?facet_wrap()
geom_density()
ggplot(mtcars,aes(x=wt)) + geom_density()
sardines <- read.csv(file="../Resources/sardines.csv")
sardines <- read.csv(file="../Resources/sardines.csv")
View(sardines)
View(sardines)
# Dataset: sardine.dat
population1=subset(sardines,location ==1)
View(population1)
mean population[['vertebrae']]
mean population[['vertebrae']]
mean (population2[['vertebrae']])
# Read in the CSV file.
hair <- read.csv(file="../Resources/hair.csv")
View(hair)
View(hair)
ggplot(hair,aes(x=HairColour,y=Pain)) + geom_boxplot()
aov(Pain~HairColour,data=hair)
ggplot(hair,aes(x=HairColour,y=Pain)) + geom_boxplot()
summary(aov(Pain~HairColour,data=hair))
?t.test()
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/01_Demo")
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
> sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
> plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
> plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
> plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
> plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
library(tidyverse)
?mutate()
?sample_n()
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))
plt + geom_density() #visualize distribution using density plot
?t.test()t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))
>
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))
Zsample_table <- population_table %>% sample_n(50)sample_table <- population_table %>% sample_n(50)
sample_table <- population_table %>% sample_n(50)
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven))
?t.test()
mpg_data <- read.csv('mpg_modified.csv') #import dataset
?aov()
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
mpg_data <- read.csv('mpg_modified.csv') #import dataset
pg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
?aov()
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt))
?cor()
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
plt + geom_point() #create a scatter plot
cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
?lm()
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
?chisq.test()
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
?chisq.test()
table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
View(filter_table3)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis")
library(dplyr)
MechaCar_mpg <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
library(tidyverse)
MechaCar_mpg <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
head(MechaCar_mpg)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/MechaCar_Statistical_Analysis")
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/MechaCar_Statistical_Analysis")
?read.csv()
MechaCar_mpg <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(MechaCar_mpg)
head(MechaCar_mpg)
MechaCar_mpg <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
View(MechaCar_mpg)
#Linear Regression
lm(mpg~vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar_mpg)
#Summary Function
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD ,data=MechaCar_mpg))
##############Deliverable 2##############
MechaCar_mpg <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
Suspension_Coil <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(Suspension_Coil)
View(Suspension_Coil)
View(summarize_demo)
View(Suspension_Coil)
#create summary table
total_summary <- Suspension_Coil %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep')
View(total_summary)
#create summary by group_by()
lot_summary <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI),Median = median(PSI), Variance = var(PSI), SD = sd(PSI) , .groups = 'keep')
View(lot_summary)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/MechaCar_Statistical_Analysis")
View(table)
View(total_summary)
View(total_summary)
View(wide_table)
View(Suspension_Coil)
View(summarize_demo)
View(Suspension_Coil)
View(lot_summary)
####### Deliverble 3 ######
# t-test for all the lots ,mu = 1500 PSI
t.test(Suspension_Coil$PSI,mu=mean(Suspension_Coil$PSI))
# LOT 1
t.test(subset(Suspension_Coil$PSI,Suspension_Coil$Manufacturing_Lot == "Lot1"),mu=mean(Suspension_Coil$PSI))
#LOT 2
t.test(subset(Suspension_Coil$PSI,Suspension_Coil$Manufacturing_Lot == "Lot2"),mu=mean(Suspension_Coil$PSI))
#LOT 3
t.test(subset(Suspension_Coil$PSI,Suspension_Coil$Manufacturing_Lot == "Lot3"),mu=mean(Suspension_Coil$PSI))
View(mpg_summary)
View(lot_summary)
View(lot_summary)
df = c(-19.4701,  -4.4994,  -0.0692 ,  5.4433 , 18.5849 )
View(plt)
View(plt)
boxplot(df)
View(lot_summary
t.test(Suspension_Coil$PSI,mu=1500)
t.test(Suspension_Coil$PSI,mu=1500)
t.test(subset(Suspension_Coil$PSI,Suspension_Coil$Manufacturing_Lot == "Lot1"),mu=1500)
#LOT 2t.test(subset(Suspension_Coil$PSI,Suspension_Coil$Manufacturing_Lot == "Lot2"),mu=mean(Suspension_Coil$PSI))
t.test(subset(Suspension_Coil$PSI,Suspension_Coil$Manufacturing_Lot == "Lot2"),mu=1500)
t.test(subset(Suspension_Coil$PSI,Suspension_Coil$Manufacturing_Lot == "Lot3"),mu=1500)
setwd("C:/Users/prave/Priya/OsuBootCampModules/OSU Boot Camp/Module 15/R_Analysis/MechaCar_Statistical_Analysis")
